<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__CUPHY__ERROR__CORRECTION" kind="group">
    <compoundname>CUPHY_ERROR_CORRECTION</compoundname>
    <title>Error Correction</title>
    <innerclass refid="structcuphyLDPCDecodeConfigDesc__t" prot="public">cuphyLDPCDecodeConfigDesc_t</innerclass>
    <innerclass refid="structcuphyLDPCDecodeDesc__t" prot="public">cuphyLDPCDecodeDesc_t</innerclass>
    <innerclass refid="structcuphyLDPCDecodeLaunchConfig__t" prot="public">cuphyLDPCDecodeLaunchConfig_t</innerclass>
    <innerclass refid="unioncuphyLDPCNormalization__t" prot="public">cuphyLDPCNormalization_t</innerclass>
    <innerclass refid="structcuphyTransportBlockDataDesc__t" prot="public">cuphyTransportBlockDataDesc_t</innerclass>
    <innerclass refid="structcuphyTransportBlockLLRDesc__t" prot="public">cuphyTransportBlockLLRDesc_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" prot="public" static="no">
        <type>struct cuphyLDPCDecoder *</type>
        <definition>typedef struct cuphyLDPCDecoder* cuphyLDPCDecoder_t</definition>
        <argsstring></argsstring>
        <name>cuphyLDPCDecoder_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>cuPHY LDPC decoder handle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" line="3746" column="32" bodyfile="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" bodystart="3746" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref></type>
        <definition>cuphyStatus_t cuphyCreateLDPCDecoder</definition>
        <argsstring>(cuphyContext_t context, cuphyLDPCDecoder_t *pdecoder, unsigned int flags)</argsstring>
        <name>cuphyCreateLDPCDecoder</name>
        <param>
          <type><ref refid="group__CUPHY__CONTEXT_1ga12fe3b19369fa0fcff8d3fdfc021a6d5" kindref="member">cuphyContext_t</ref></type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref> *</type>
          <declname>pdecoder</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Allocates and initializes a cuPHY LDPC decoder instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Allocates a cuPHY decoder instance and returns a handle in the address provided by the caller.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> if <computeroutput>pdecoder</computeroutput> is NULL.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a52a709523f0220a960564b5d4bde19bc" kindref="member">CUPHY_STATUS_ALLOC_FAILED</ref> if an LDPC decoder cannot be allocated on the host.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref> if allocation and initialization were successful.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>- cuPHY context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pdecoder</parametername>
</parameternamelist>
<parameterdescription>
<para>- Address for the new <ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref> instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>- Creation flags (currently unused)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref>, <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a52a709523f0220a960564b5d4bde19bc" kindref="member">CUPHY_STATUS_ALLOC_FAILED</ref>, <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref></para>
</simplesect>
<simplesect kind="see"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref>,<ref refid="group__CUPHY__ERROR_1ga66176ce79cdbfabf435ad1193f479242" kindref="member">cuphyGetErrorName</ref>,<ref refid="group__CUPHY__ERROR_1ga5274721e01aa356e15917123415b8e5f" kindref="member">cuphyGetErrorString</ref>,<ref refid="group__CUPHY__CONTEXT_1gaa02f08937ac045b1deb1913b9fbf68ea" kindref="member">cuphyCreateContext</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga852542e516621ac1621571312ff62337" kindref="member">cuphyDestroyLDPCDecoder</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" line="3773" column="16" declfile="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" declline="3773" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__CUPHY__ERROR__CORRECTION_1ga852542e516621ac1621571312ff62337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref></type>
        <definition>cuphyStatus_t cuphyDestroyLDPCDecoder</definition>
        <argsstring>(cuphyLDPCDecoder_t decoder)</argsstring>
        <name>cuphyDestroyLDPCDecoder</name>
        <param>
          <type><ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref></type>
          <declname>decoder</declname>
        </param>
        <briefdescription>
<para>Destroys a cuPHY LDPC decoder object. </para>
        </briefdescription>
        <detaileddescription>
<para>Destroys a cuPHY LDPC decoder object that was previously created by a call to <ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref>. The handle provided to this function should not be used for any operations after this function returns.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> if <computeroutput>decoder</computeroutput> is NULL.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref> if destruction was successful.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>decoder</parametername>
</parameternamelist>
<parameterdescription>
<para>- previously allocated <ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref> instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref>, <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref></para>
</simplesect>
<simplesect kind="see"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" line="3797" column="16" declfile="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" declline="3797" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__CUPHY__ERROR__CORRECTION_1ga7dad087daa4e033fbcaec2090d8f2968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref></type>
        <definition>cuphyStatus_t cuphyErrorCorrectionLDPCDecode</definition>
        <argsstring>(cuphyLDPCDecoder_t decoder, cuphyTensorDescriptor_t tensorDescDst, void *dstAddr, cuphyTensorDescriptor_t tensorDescLLR, const void *LLRAddr, const cuphyLDPCDecodeConfigDesc_t *config, cudaStream_t strm)</argsstring>
        <name>cuphyErrorCorrectionLDPCDecode</name>
        <param>
          <type><ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref></type>
          <declname>decoder</declname>
        </param>
        <param>
          <type><ref refid="group__CUPHY__TENSOR__DESC_1ga8ed3c2125e6a047ab77f07158eabc8f2" kindref="member">cuphyTensorDescriptor_t</ref></type>
          <declname>tensorDescDst</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dstAddr</declname>
        </param>
        <param>
          <type><ref refid="group__CUPHY__TENSOR__DESC_1ga8ed3c2125e6a047ab77f07158eabc8f2" kindref="member">cuphyTensorDescriptor_t</ref></type>
          <declname>tensorDescLLR</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>LLRAddr</declname>
        </param>
        <param>
          <type>const <ref refid="structcuphyLDPCDecodeConfigDesc__t" kindref="compound">cuphyLDPCDecodeConfigDesc_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>strm</declname>
        </param>
        <briefdescription>
<para>Perform a bulk LDPC decode operation on a tensor of soft input values. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs a bulk LDPC decode operation on an input tensor of &quot;soft&quot; log likelihood ratio (LLR) values.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>decoder</parametername>
</parameternamelist>
<parameterdescription>
<para>- cuPHY LDPC decoder instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tensorDescDst</parametername>
</parameternamelist>
<parameterdescription>
<para>- tensor descriptor for LDPC output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dstAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>- address for LDPC output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tensorDescLLR</parametername>
</parameternamelist>
<parameterdescription>
<para>- tensor descriptor for soft input LLR values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LLRAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>- address for soft input LLR values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>- LDPC configuration structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strm</parametername>
</parameternamelist>
<parameterdescription>
<para>- CUDA stream for LDPC execution</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If the value of <computeroutput>algoIndex</computeroutput> is zero, the library will choose the &quot;best&quot; algorithm for the given LDPC configuration.</para>
<para>The type of input tensor descriptor <computeroutput>tensorDescLLR</computeroutput> must be either <ref refid="cuphy_8h_1a941a9befb93ca193de52d2814aeee0e1ae9153d9096f69c66c344b64f9a096e8b" kindref="member">CUPHY_R_32F</ref> or <ref refid="cuphy_8h_1a941a9befb93ca193de52d2814aeee0e1aa63580165de82b9d7d557fad554560c2" kindref="member">CUPHY_R_16F</ref>, and the rank must be 2.</para>
<para>The type of output tensor descriptor <computeroutput>tensorDescDst</computeroutput> must be <ref refid="cuphy_8h_1a941a9befb93ca193de52d2814aeee0e1a999d16ea11a532e431e4f6036bec9ae3" kindref="member">CUPHY_BIT</ref>, and the rank must be 2.</para>
<para>For input LLR tensors of type CUPHY_R_16F, loads occur as multiples of 8 elements (i.e. 16 bytes). Therefore, memory allocation should be performed such that the number of LLR elements that can be read is a multiple of 8 for each codeword. This can be done by specifying a stride that is multiple of 8 for the second dimension, or by using the CUPHY_TENSOR_ALIGN_COALESCE flag when allocating the tensor. Values read from this padded memory will not be used, and do not need to be zeroed or cleared.</para>
<para>For input LLR tensors of type CUPHY_R_32F, loads occur as multiples of 4 elements (i.e. 16 bytes). Therefore, memory allocation should be performed such that the number of LLR elements that can be read is a multiple of 4 for each codeword. This can be done by specifying a stride that is multiple of 4 for the second dimension, or by using the CUPHY_TENSOR_ALIGN_COALESCE flag when allocating the tensor. Values read from this padded memory will not be used, and do not need to be zeroed or cleared.</para>
<para>The union member of the normalization value in the configuration <computeroutput>config</computeroutput> must match the LLR type in <computeroutput>config</computeroutput>. In other words, if the LLR type is CUPHY_R_32F, the normalization value should be populated using the f32 union member, and if the LLR type is CUPHY_R_16F, both halves of the f16x2 union member should be set with the same normalization value in fp16 format. The CUDA __float2half2_rn() function can be used to convert a float value to a pair of fp16 values. Alternatively, if the <ref refid="group__CUPHY__ERROR__CORRECTION_1ga4fdd62ce94d26b39f35b98de89dbe189" kindref="member">cuphyErrorCorrectionLDPCDecodeSetNormalization()</ref> function is used, the correct union member will be set automatically by that function.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> if: <itemizedlist>
<listitem>
<para><computeroutput>decoder</computeroutput> is NULL </para>
</listitem>
<listitem>
<para><computeroutput>BG</computeroutput>, <computeroutput>Kb</computeroutput>, <computeroutput>mb</computeroutput>, and <computeroutput>Z</computeroutput> do not represent a valid LDPC configuration </para>
</listitem>
<listitem>
<para><computeroutput>maxNumIterations</computeroutput> &lt;= 0 </para>
</listitem>
<listitem>
<para><computeroutput>tensorDescDst</computeroutput> is NULL </para>
</listitem>
<listitem>
<para><computeroutput>tensorDescLLR</computeroutput> is NULL </para>
</listitem>
<listitem>
<para><computeroutput>dstAddr</computeroutput> NULL </para>
</listitem>
<listitem>
<para><computeroutput>LLRAddr</computeroutput> is NULL </para>
</listitem>
<listitem>
<para><computeroutput>the</computeroutput> data type of <computeroutput>tensorDescDst</computeroutput> and llr_type in <computeroutput>config</computeroutput> do not match </para>
</listitem>
</itemizedlist>
</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a96fa9d47b9969eac14e60d4f8d8a2646" kindref="member">CUPHY_STATUS_UNSUPPORTED_CONFIG</ref> if the combination of the LDPC configuration (<computeroutput>BG</computeroutput>, <computeroutput>Kb</computeroutput>, <computeroutput>mb</computeroutput>, and <computeroutput>Z</computeroutput>) is not supported for a given LLR tensor and/or algorithm index (<computeroutput>algoIndex</computeroutput>).</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a0e35b4d069a6a3069b01ab8518a554bc" kindref="member">CUPHY_STATUS_UNSUPPORTED_RANK</ref> if either the input tensor descriptor (<computeroutput>tensorDescLLR</computeroutput>) or output tensor descriptor (<computeroutput>tensorDescDst</computeroutput>) do not have a rank of 2.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a0145d14f85ce7cd9bd62d2b261967351" kindref="member">CUPHY_STATUS_UNSUPPORTED_TYPE</ref> if the output tensor descriptor (<computeroutput>tensorDescLLR</computeroutput>) is not of type <ref refid="cuphy_8h_1a941a9befb93ca193de52d2814aeee0e1a999d16ea11a532e431e4f6036bec9ae3" kindref="member">CUPHY_BIT</ref>, or if the input tensor descriptor is not one of (<ref refid="cuphy_8h_1a941a9befb93ca193de52d2814aeee0e1ae9153d9096f69c66c344b64f9a096e8b" kindref="member">CUPHY_R_32F</ref> or <ref refid="cuphy_8h_1a941a9befb93ca193de52d2814aeee0e1aa63580165de82b9d7d557fad554560c2" kindref="member">CUPHY_R_16F</ref>)</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref> if the decode operation was submitted to the stream successfully.</para>
<para><simplesect kind="return"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref>, <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a0e35b4d069a6a3069b01ab8518a554bc" kindref="member">CUPHY_STATUS_UNSUPPORTED_RANK</ref> <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a0145d14f85ce7cd9bd62d2b261967351" kindref="member">CUPHY_STATUS_UNSUPPORTED_TYPE</ref> <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a96fa9d47b9969eac14e60d4f8d8a2646" kindref="member">CUPHY_STATUS_UNSUPPORTED_CONFIG</ref></para>
</simplesect>
<simplesect kind="see"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga852542e516621ac1621571312ff62337" kindref="member">cuphyDestroyLDPCDecoder</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1gab4e963c757afd2447ac4f00cf08b10f0" kindref="member">cuphyErrorCorrectionLDPCDecodeGetWorkspaceSize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" line="3934" column="16" declfile="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" declline="3934" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__CUPHY__ERROR__CORRECTION_1ga2bb127a29e1f8cbf5fe99caf57201ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref></type>
        <definition>cuphyStatus_t cuphyErrorCorrectionLDPCDecodeGetLaunchDescriptor</definition>
        <argsstring>(cuphyLDPCDecoder_t decoder, cuphyLDPCDecodeLaunchConfig_t *launchConfig)</argsstring>
        <name>cuphyErrorCorrectionLDPCDecodeGetLaunchDescriptor</name>
        <param>
          <type><ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref></type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>cuphyLDPCDecodeLaunchConfig_t *</type>
          <declname>launchConfig</declname>
        </param>
        <briefdescription>
<para>Populates a launch configuration for the LDPC decoder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>decoder</parametername>
</parameternamelist>
<parameterdescription>
<para>- decoder object created by <ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>launchConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>- launch structure with a populated config (see <ref refid="structcuphyLDPCDecodeConfigDesc__t" kindref="compound">cuphyLDPCDecodeConfigDesc_t</ref>)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> if: <itemizedlist>
<listitem>
<para><computeroutput>decoder</computeroutput> is not a valid <ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref> instance </para>
</listitem>
<listitem>
<para><computeroutput>launchConfig</computeroutput> is NULL </para>
</listitem>
</itemizedlist>
</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a96fa9d47b9969eac14e60d4f8d8a2646" kindref="member">CUPHY_STATUS_UNSUPPORTED_CONFIG</ref> if the combination of the LDPC configuration (<computeroutput>BG</computeroutput>, <computeroutput>Kb</computeroutput>, <computeroutput>mb</computeroutput>, and <computeroutput>Z</computeroutput>) is not supported for a given <computeroutput>LLRtype</computeroutput> and/or algorithm index (<computeroutput>algo</computeroutput>).</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref> if the launch configuration was populated successfully</para>
<para><simplesect kind="return"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref>, <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref></para>
</simplesect>
<simplesect kind="see"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga852542e516621ac1621571312ff62337" kindref="member">cuphyDestroyLDPCDecoder</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" line="4112" column="16" declfile="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" declline="4112" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__CUPHY__ERROR__CORRECTION_1gab4e963c757afd2447ac4f00cf08b10f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref></type>
        <definition>cuphyStatus_t cuphyErrorCorrectionLDPCDecodeGetWorkspaceSize</definition>
        <argsstring>(cuphyLDPCDecoder_t decoder, const cuphyLDPCDecodeConfigDesc_t *config, int numCodeWords, size_t *sizeInBytes)</argsstring>
        <name>cuphyErrorCorrectionLDPCDecodeGetWorkspaceSize</name>
        <param>
          <type><ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref></type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>const <ref refid="structcuphyLDPCDecodeConfigDesc__t" kindref="compound">cuphyLDPCDecodeConfigDesc_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numCodeWords</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>sizeInBytes</declname>
        </param>
        <briefdescription>
<para>Returns the workspace size for and LDPC decode operation. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculates the workspace size (in bytes) required to perform an LDPC decode operation for the given LDPC configuration.</para>
<para>If the <computeroutput>algoIndex</computeroutput> parameter is -1, the function will return the maximum workspace size for all numbers of parity nodes less than or equal to the value of the <computeroutput>mb</computeroutput> parameter (for the given lifting size <computeroutput>Z</computeroutput>). This is useful for determining the maximum workspace size across different code rates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>decoder</parametername>
</parameternamelist>
<parameterdescription>
<para>- decoder object created by <ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>- LDPC decoder configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numCodeWords</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of codewords to decode simultaneously </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sizeInBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- output address for calculated workspace size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Different LDPC decoding algorithms may have different workspace requirements. If the value of <computeroutput>algoIndex</computeroutput> is zero, the library will choose the &quot;best&quot; algorithm for the given LDPC configuration.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> if: <itemizedlist>
<listitem>
<para><computeroutput>BG</computeroutput>, <computeroutput>Kb</computeroutput>, <computeroutput>mb</computeroutput>, and <computeroutput>Z</computeroutput> do not represent a valid LDPC configuration </para>
</listitem>
<listitem>
<para><computeroutput>numCodeWords</computeroutput> &lt;= 0 </para>
</listitem>
<listitem>
<para><computeroutput>sizeInBytes</computeroutput> is NULL </para>
</listitem>
</itemizedlist>
</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a96fa9d47b9969eac14e60d4f8d8a2646" kindref="member">CUPHY_STATUS_UNSUPPORTED_CONFIG</ref> if the combination of the LDPC configuration (<computeroutput>BG</computeroutput>, <computeroutput>Kb</computeroutput>, <computeroutput>mb</computeroutput>, and <computeroutput>Z</computeroutput>) is not supported for a given <computeroutput>LLRtype</computeroutput> and/or algorithm index (<computeroutput>algoIndex</computeroutput>).</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref> if the size calculation was successful.</para>
<para><simplesect kind="return"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref>, <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a96fa9d47b9969eac14e60d4f8d8a2646" kindref="member">CUPHY_STATUS_UNSUPPORTED_CONFIG</ref></para>
</simplesect>
<simplesect kind="see"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga7dad087daa4e033fbcaec2090d8f2968" kindref="member">cuphyErrorCorrectionLDPCDecode</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga852542e516621ac1621571312ff62337" kindref="member">cuphyDestroyLDPCDecoder</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" line="4048" column="16" declfile="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" declline="4048" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__CUPHY__ERROR__CORRECTION_1ga4fdd62ce94d26b39f35b98de89dbe189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref></type>
        <definition>cuphyStatus_t cuphyErrorCorrectionLDPCDecodeSetNormalization</definition>
        <argsstring>(cuphyLDPCDecoder_t decoder, cuphyLDPCDecodeConfigDesc_t *decodeDesc)</argsstring>
        <name>cuphyErrorCorrectionLDPCDecodeSetNormalization</name>
        <param>
          <type><ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref></type>
          <declname>decoder</declname>
        </param>
        <param>
          <type><ref refid="structcuphyLDPCDecodeConfigDesc__t" kindref="compound">cuphyLDPCDecodeConfigDesc_t</ref> *</type>
          <declname>decodeDesc</declname>
        </param>
        <briefdescription>
<para>Sets the min-sum normalization constant for a given LDPC configuration. </para>
        </briefdescription>
        <detaileddescription>
<para>Determines an appropriate LDPC decoder min-sum normalization constant, given the LLR type and num_parity_nodes fields of the input configuration. Note that if the llr_type field of the configuration is CUPHY_R_16F, the field will be set to a pair of __half values (as is expected by the LDPC decoder kernel).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>decoder</parametername>
</parameternamelist>
<parameterdescription>
<para>- decoder object created by <ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decodeDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>- decode descriptor with valid llr_type and num_parity_nodes fields</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> if: <itemizedlist>
<listitem>
<para><computeroutput>llr_type</computeroutput> or num_parity_nodes fields do not represent a valid LDPC configuration </para>
</listitem>
</itemizedlist>
</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a96fa9d47b9969eac14e60d4f8d8a2646" kindref="member">CUPHY_STATUS_UNSUPPORTED_CONFIG</ref> if the combination of the LDPC configuration (<computeroutput>BG</computeroutput>, <computeroutput>Kb</computeroutput>, <computeroutput>mb</computeroutput>, and <computeroutput>Z</computeroutput>) is not supported for a given <computeroutput>LLRtype</computeroutput> and/or algorithm index (<computeroutput>algo</computeroutput>).</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref> if the constant was set successfully.</para>
<para><simplesect kind="return"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref>, <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref></para>
</simplesect>
<simplesect kind="see"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga852542e516621ac1621571312ff62337" kindref="member">cuphyDestroyLDPCDecoder</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" line="4083" column="16" declfile="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" declline="4083" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__CUPHY__ERROR__CORRECTION_1ga263f9d73b34c316fc768da0ec9672401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref></type>
        <definition>cuphyStatus_t cuphyErrorCorrectionLDPCTransportBlockDecode</definition>
        <argsstring>(cuphyLDPCDecoder_t decoder, const cuphyLDPCDecodeDesc_t *decodeDesc, cudaStream_t strm)</argsstring>
        <name>cuphyErrorCorrectionLDPCTransportBlockDecode</name>
        <param>
          <type><ref refid="group__CUPHY__ERROR__CORRECTION_1gafbedcb267a9a8754f1b8681e62ebafa9" kindref="member">cuphyLDPCDecoder_t</ref></type>
          <declname>decoder</declname>
        </param>
        <param>
          <type>const cuphyLDPCDecodeDesc_t *</type>
          <declname>decodeDesc</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>strm</declname>
        </param>
        <briefdescription>
<para>Perform a bulk LDPC decode operation on a tensor of soft input values. </para>
        </briefdescription>
        <detaileddescription>
<para>Performs a bulk LDPC decode operation on &quot;soft&quot; log likelihood ratio (LLR) values for one or more transport blocks</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>decoder</parametername>
</parameternamelist>
<parameterdescription>
<para>- cuPHY LDPC decoder instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decodeDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>- LDPC decode descriptor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strm</parametername>
</parameternamelist>
<parameterdescription>
<para>- CUDA stream for LDPC execution</para>
</parameterdescription>
</parameteritem>
</parameterlist>
If the value of algo field of the descriptor <computeroutput>decodeDesc</computeroutput> is zero, the library will choose the &quot;best&quot; algorithm for the given LDPC configuration.</para>
<para>The llr_type field of the <computeroutput>decodeDesc</computeroutput> must be either <ref refid="cuphy_8h_1a941a9befb93ca193de52d2814aeee0e1ae9153d9096f69c66c344b64f9a096e8b" kindref="member">CUPHY_R_32F</ref> or <ref refid="cuphy_8h_1a941a9befb93ca193de52d2814aeee0e1aa63580165de82b9d7d557fad554560c2" kindref="member">CUPHY_R_16F</ref>.</para>
<para>For input LLR buffers of type CUPHY_R_16F, loads occur as multiples of 8 elements (i.e. 16 bytes). Therefore, memory allocation should be performed such that the number of LLR elements that can be read is a multiple of 8 for each codeword. The memory need only be addressable. (For a multi-codeword case, the memory can lie in the next codeword.) Values read from padded memory will not be used, and do not need to be zeroed or cleared.</para>
<para>For input LLR tensors of type CUPHY_R_32F, loads occur as multiples of 4 elements (i.e. 16 bytes). Therefore, memory allocation should be performed such that the number of LLR elements that can be read is a multiple of 4 for each codeword. Values read from padded memory will not be used, and do not need to be zeroed or cleared.</para>
<para>The union member of the normalization value in the configuration <computeroutput>config</computeroutput> must match the LLR type in the decode descriptor configuration. In other words, if the LLR type is CUPHY_R_32F, the normalization value should be populated using the f32 union member, and if the LLR type is CUPHY_R_16F, both halves of the f16x2 union member should be set with the same normalization value in fp16 format. The CUDA __float2half2_rn() function can be used to convert a float value to a pair of fp16 values. Alternatively, if the <ref refid="group__CUPHY__ERROR__CORRECTION_1ga4fdd62ce94d26b39f35b98de89dbe189" kindref="member">cuphyErrorCorrectionLDPCDecodeSetNormalization()</ref> function is used, the correct union member will be set automatically by that function.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> if: <itemizedlist>
<listitem>
<para><computeroutput>decoder</computeroutput> is NULL </para>
</listitem>
<listitem>
<para><computeroutput>BG</computeroutput>, <computeroutput>Kb</computeroutput>, <computeroutput>mb</computeroutput>, and <computeroutput>Z</computeroutput> do not represent a valid LDPC configuration </para>
</listitem>
<listitem>
<para><computeroutput>maxNumIterations</computeroutput> &lt;= 0 </para>
</listitem>
</itemizedlist>
</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a96fa9d47b9969eac14e60d4f8d8a2646" kindref="member">CUPHY_STATUS_UNSUPPORTED_CONFIG</ref> if the combination of the LDPC configuration (<computeroutput>BG</computeroutput>, <computeroutput>Kb</computeroutput>, <computeroutput>mb</computeroutput>, and <computeroutput>Z</computeroutput>) is not supported for a given LLR tensor and/or algorithm index.</para>
<para>Returns <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref> if the decode operation was submitted to the stream successfully.</para>
<para><simplesect kind="return"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a87e220ee223e11582aff7bc92c750fa5" kindref="member">CUPHY_STATUS_SUCCESS</ref>, <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a37fb8559215f6d3286889e04a22e28a8" kindref="member">CUPHY_STATUS_INVALID_ARGUMENT</ref> <ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3a96fa9d47b9969eac14e60d4f8d8a2646" kindref="member">CUPHY_STATUS_UNSUPPORTED_CONFIG</ref></para>
</simplesect>
<simplesect kind="see"><para><ref refid="cuphy_8h_1a2762a3ffaa39cf82703cd3340c4f6ef3" kindref="member">cuphyStatus_t</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga5bdc8774e9fa50d076cc39d53a916da3" kindref="member">cuphyCreateLDPCDecoder</ref>,<ref refid="group__CUPHY__ERROR__CORRECTION_1ga852542e516621ac1621571312ff62337" kindref="member">cuphyDestroyLDPCDecoder</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" line="4002" column="16" declfile="/home/xxc/cuBB/cuPHY/src/cuphy/cuphy.h" declline="4002" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This section describes the error correction functions of the cuPHY application programming interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
